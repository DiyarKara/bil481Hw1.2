/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bil481Proje2;

import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

//import java.util.logging.LogManager;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;



public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        Logger logger = LogManager.getLogger(App.class);
        logger.error("hello world");

        int port = Integer.parseInt(System.getenv("PORT"));
        port(port);
        logger.error("Current port number:" + port);


        System.out.println(new App().getGreeting());

        get("/", (req, res) -> "Hello World, sup kid?");


        get("/compute",
            (rq, rs) -> {
              Map<String, String> map = new HashMap<String, String>();
              map.put("result", "not computed yet!");
              return new ModelAndView(map, "compute.mustache");
            },
            new MustacheTemplateEngine());


        post("/compute", (req, res) -> {
          //System.out.println(req.queryParams("input1"));
          //System.out.println(req.queryParams("input2"));

          String input1 = req.queryParams("input1").replaceAll("\\s","");
          int input1AsInt = Integer.parseInt(input1);

          String input2 = req.queryParams("input2").replaceAll("\\s","");
          int input2AsInt = Integer.parseInt(input2);

          String input3 = req.queryParams("input3").replaceAll("\\s","");
          int input3AsInt = Integer.parseInt(input3);

          String input4 = req.queryParams("input4");
          java.util.Scanner sc1 = new java.util.Scanner(input4);
          sc1.useDelimiter("[;\r\n]+");
          java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
          while (sc1.hasNext())
          {
            int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
            inputList.add(value);
          }
          sc1.close();
          System.out.println(inputList);


          //boolean result = App.search(inputList, input2AsInt);
          boolean result = App.isBigger(input1AsInt, input2AsInt, input3AsInt, inputList);

          Map<String, Boolean> map = new HashMap<String, Boolean>();
          map.put("result", result);
          return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());

    

    }

    public static boolean isBigger(int num1, int num2, int num3, ArrayList<Integer> arr){
        // if array has num1, num2 and sum of these numbers are bigger than num3 return true, if not false
        boolean num1v = false;
        boolean num2v = false;
        for(int i=0; i<arr.size(); i++){
            if(arr.contains(num1)){
                num1v = true;    
            }
            if(arr.contains(num2)){
                num2v = true;
            }
        }
        if(num1v == true && num2v == true){
            if(num1+num2 > num3){
                return true;
            }
            else
                return false;
        }
        return false;
    }

}
